# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#
# lane_context[SharedValues::IPA_OUTPUT_PATH] lane_context[SharedValues::BUILD_NUMBER] https://docs.fastlane.tools/advanced/#lane-context
# CredentialsManager : https://github.com/fastlane/fastlane/tree/master/credentials_manager
# clipboard clipboard(value: lane_context[SharedValues::HOCKEY_DOWNLOAD_LINK] || "")
# twitter https://github.com/rb-de0/fastlane-plugin-twitter

REQUIRED_XCODE_VERSION = '10.0'

default_platform(:ios)

platform :ios do

  dev_domain = ENV['DEV_DOMAIN'] || 'com.provenance-emu'

  import('Fastfile+Build')
  import('Fastfile+Carthage')
  import('Fastfile+Rome')
  import('Fastfile+Certs')
  import('Fastfile+Publish')
  import('Fastfile+CI')
  import('Fastfile+Badge')
  import('Fastfile+Testing')
  import('Fastfile+Install')

  before_all do
    git_pull(only_tags: true)
  end

  # after_all do
  #   push_git_tags
  # end

  private_lane :verify_xcode_version do
    UI.message 'Verifying correct XCode version'
    ensure_xcode_version(version: REQUIRED_XCODE_VERSION)
  end

  # error block is executed when a error occurs
  error do |lane, exception|
    if is_ci?
      slack(
        # message with short human friendly message
        message: exception.to_s,
        success: false,
        # Output containing extended log output
        payload: { "Output" => exception.error_info.to_s }
      )
    end
  end
end

import('Fastfile+Enviroment')

def load_keys
  if is_ci?
    return
  end

  begin
    import("keys")
    dev_domain = ENV["DEV_DOMAIN"]
  rescue => exception
    if UI.interactive?
      shouldSetup = UI.confirm 'Fastlane enviroment is not configured. Setup now?'
      if shouldSetup
        UI.message 'This feature not yet implimented. Manually edit fastlane/keys using keys.template as an example.'
      end
    end
    raise exception
  end
end
